<Activity mc:Ignorable="sap sap2010" x:Class="Data3" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SystemError" Type="InOutArgument(s:Exception)" />
    <x:Property Name="Time_CheckEmail" Type="InOutArgument(x:Int32)" />
    <x:Property Name="Time_DelayReceivedEmail" Type="InOutArgument(x:TimeSpan)" />
    <x:Property Name="Time_DelayCheckEmails" Type="InOutArgument(x:TimeSpan)" />
    <x:Property Name="Mail_AlertEmailNotReceived" Type="InOutArgument(x:String)" />
    <x:Property Name="Kill" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1161.6,2521.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Data3_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Range" sap:VirtualizedContainerService.HintSize="1141.6,2461.6" sap2010:WorkflowViewState.IdRef="Sequence_96">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="Lista" />
      <Variable x:TypeArguments="x:Int32" Name="Rows" />
      <Variable x:TypeArguments="x:Int32" Name="Columns" />
      <Variable x:TypeArguments="sd:DataTable" Name="Range" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1100,60" sap2010:WorkflowViewState.IdRef="Assign_91">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[Lista]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[New List(of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1100,2268.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="Data\DataEmail.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1066.4,2159.2" sap2010:WorkflowViewState.IdRef="Sequence_100">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadCell Cell="A2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1024.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" PreserveFormat="True" SheetName="Email">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="x:Int32">[Time_CheckEmail]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="B2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1024.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Email">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="x:TimeSpan">[Time_DelayReceivedEmail]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="C2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1024.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" PreserveFormat="True" SheetName="Email">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="x:String">[Mail_AlertEmailNotReceived]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ExcelReadCell Cell="D2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1024.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" PreserveFormat="True" SheetName="Email">
              <ui:ExcelReadCell.Result>
                <OutArgument x:TypeArguments="x:TimeSpan">[Time_DelayCheckEmails]</OutArgument>
              </ui:ExcelReadCell.Result>
            </ui:ExcelReadCell>
            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1024.8,1666.4" sap2010:WorkflowViewState.IdRef="ForEach`1_22" Values="[Enumerable.Range(0,1)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="989.6,1532" sap2010:WorkflowViewState.IdRef="Sequence_105">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[Range]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="948,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Email">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="948,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[Rows]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[Range.Rows.Count]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="948,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[Columns]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[Range.Columns.Count]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="948,1139.2" sap2010:WorkflowViewState.IdRef="ForEach`1_21" Values="[Enumerable.Range(0,Rows)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Int32">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="item1" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="912.8,1004.8" sap2010:WorkflowViewState.IdRef="Sequence_104">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="871.2,912" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[Enumerable.Range(0,Columns)]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:Int32">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Int32" Name="item2" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="836,777.6" sap2010:WorkflowViewState.IdRef="Sequence_103">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[Range.Rows(item1).ItemArray(item2).ToString = Nothing]" sap:VirtualizedContainerService.HintSize="794.4,435.2" sap2010:WorkflowViewState.IdRef="If_10">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Error, campo vacio en la hoja&quot;]" />
                                          <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[New Exception("Excepción")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,185.6" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Bien&quot;]" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <If Condition="[Kill = 1]" sap:VirtualizedContainerService.HintSize="794.4,209.6" sap2010:WorkflowViewState.IdRef="If_11">
                                      <If.Then>
                                        <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[New Exception("Excepción")]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>